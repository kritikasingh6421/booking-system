#port
server.port = ${PORT:9999}

#application name
spring.application.name = GATEWAY

#Routes of services
spring.cloud.gateway.routes[0].id=hotel-search
#for local machine
spring.cloud.gateway.routes[0].uri=${HOTEL_GATEWAY_ROUTE:lb://hotel-search}
#for docker
#spring.cloud.gateway.routes[0].uri=http://hotel-search:8080
spring.cloud.gateway.routes[0].predicates[0]=Path=/hotel/**
spring.cloud.gateway.routes[0].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.name=HotelService
spring.cloud.gateway.routes[0].filters[0].args.fallbackuri=forward:/hotelFallBack

spring.cloud.gateway.routes[1].id=flight-search
#for local machine
spring.cloud.gateway.routes[1].uri=${FLIGHT_GATEWAY_ROUGTE:lb://flight-search}
#for docker
#spring.cloud.gateway.routes[1].uri=http://flight-search:8084
spring.cloud.gateway.routes[1].predicates[0]=Path=/flight/** 
#spring.cloud.gateway.routes[1].filters[0]=RewritePath=/flight/(?<path>.*), /$\{path}
spring.cloud.gateway.routes[1].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[1].filters[0].args.name=FlightService
spring.cloud.gateway.routes[1].filters[0].args.fallbackuri=forward:/flightFallBack

spring.cloud.gateway.routes[2].id=payment
#for local machine
spring.cloud.gateway.routes[2].uri=${PAYMENT_GATEWAY_ROUTE:lb://payment}
#for docker
#spring.cloud.gateway.routes[2].uri=http://payment:8086
spring.cloud.gateway.routes[2].predicates[0]=Path=/payment/**  
spring.cloud.gateway.routes[2].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[2].filters[0].args.name=PaymentService
spring.cloud.gateway.routes[2].filters[0].args.fallbackuri=forward:/paymentFallBack

spring.cloud.gateway.routes[3].id=login
#for docker
#spring.cloud.gateway.routes[3].uri=http://login:8088
#for local machine
spring.cloud.gateway.routes[3].uri=${LOGIN_GATEWAY_ROUTE:lb://login}
spring.cloud.gateway.routes[3].predicates[0]=Path=/user/** 
spring.cloud.gateway.routes[3].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[3].filters[0].args.name=LoginService
spring.cloud.gateway.routes[3].filters[0].args.fallbackuri=forward:/loginFallBack

#eureka client registery
eureka.client.register-with-eureka = true
eureka.client.fetch-registry =true
eureka.client.service-url.defaultZone = http://${DISCOVERY_SERVER_HOST:localhost}:${DISCOVERY_SERVER_PORT:8761}/eureka/
eureka.instance.hostname = localhost

#zipkin server url
spring.zipkin.base-url=http://${ZIPKIN_SERVER_HOST:localhost}:${ZIPKIN_SERVER_PORT:9411}
spring.seluth.sampler.probability=1.0